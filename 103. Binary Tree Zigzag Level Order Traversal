/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> solution = new ArrayList<>();
        if (root == null) { return solution; }
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        
        while(!queue.isEmpty()) {
            int levelSize = queue.size();
            
            List<Integer> currLevel = new ArrayList<>();
            for (int i = 0; i < levelSize; i++) {
                TreeNode curr = queue.poll();
                currLevel.add(curr.val);

                if (curr.left != null) { queue.offer(curr.left); }
                if (curr.right != null) { queue.offer(curr.right); }   
            }
            
            solution.add(currLevel);
        }
        
        // Flip every other list
        for (int i = 1; i < solution.size(); i+=2) {
            Collections.reverse(solution.get(i));
        }
        
        return solution;
    }
}
