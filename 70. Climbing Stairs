/*
70. Climbing Stairs
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

Example 1:

Input: 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

原题链接：https://leetcode.com/problems/climbing-stairs/
*/

//解决思路：动态规划，第i阶可以分为【1+第i-1】和【2+第i-2】两种情况


//代码
class Solution {
    public int climbStairs(int n) {
         if (n == 0 || n == 1 || n == 2) return n;
	        int []dp=new int[n+1];
	        dp[0] = 1;
	        dp[1] = 1;
	        for (int i = 2; i <= n; i++){
	            dp[i] = dp[i-1] + dp[i-2];
	        }
	        
	        return dp[n];
    }
}