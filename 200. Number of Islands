//DFS

class Solution { 
    public int numIslands(char[][] grid) {
        if(grid==null||grid.length==0) return 0;
        int[][] visited=new int[grid.length][grid[0].length];
        int count=0;
        for(int i=0;i<grid[0].length;i++){
            for(int j=0;j<grid.length;j++){
                if(visited[j][i]==0&&grid[j][i]=='1'){
                    count=count+1;
                    helper(grid,visited,count,j,i);
                }
            }
        }
        return count;
    }
    public void helper(char[][] grid,int[][] visited,int count,int r,int c){
        if(grid[r][c]=='1'&&visited[r][c]==0){
            visited[r][c]=1;
            if(r+1<grid.length){
                helper(grid,visited,count,r+1,c);
            }
            if(r-1>=0){
                helper(grid,visited,count,r-1,c);
            }
              if(c+1<grid[0].length)
            {
                helper(grid,visited,count,r,c+1);
            }

            if(c-1>=0)
            {
                helper(grid,visited,count,r,c-1);
            }
        }
    }
}
