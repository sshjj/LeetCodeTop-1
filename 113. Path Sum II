//

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public void pathSumBacktrack(List<List<Integer>> list, List<Integer> subList, TreeNode node, int sum) {
        subList.add(node.val);
        sum -= node.val;
        if (node.left == null && node.right == null) {
            if (sum == 0)
                list.add(new ArrayList(subList));
            return;
        }
        if (node.left != null) {
            pathSumBacktrack(list, subList, node.left, sum);
            subList.remove(subList.size() - 1);
        }
        if (node.right != null) {
            pathSumBacktrack(list, subList, node.right, sum);
            subList.remove(subList.size() - 1);
        }
    }
    
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null)
            return list;
        pathSumBacktrack(list, new ArrayList<>(), root, sum);
        return list;
    }
}
