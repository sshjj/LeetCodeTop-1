/*
78. Subsets
Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
原题链接：https://leetcode.com/problems/subsets/
*/

//解决思路：回溯法，循环和递归嵌套
//代码
class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result=new ArrayList();
        List<Integer> temp=new ArrayList();
        dfs(result,temp,nums,0);
        return result;
    }
    public static void dfs(List<List<Integer>>result,List<Integer> temp,int nums[],int j){
        result.add(new ArrayList<Integer>(temp));
        for(int i=j;i<nums.length;i++){
            temp.add(nums[i]);
            dfs(result,temp,nums,i+1);
            temp.remove(temp.size()-1);
        }
    }
}