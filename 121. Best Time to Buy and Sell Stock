/*
121. Best Time to Buy and Sell Stock
Say you have an array for which the ith element is the price of a given stock on day i.

If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.

Note that you cannot sell a stock before you buy one.

Example 1:

Input: [7,1,5,3,6,4]
Output: 5
Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
             Not 7-1 = 6, as selling price needs to be larger than buying price.
原题链接：https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
*/

//解决思路：只能购买一次，所以不适合用贪心，用动态规划。
//代码
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public int maxProfit(int[] prices) {
        if(prices==null||prices.length<1)
	        	return 0;
	        int min=prices[0];
	        int maxP=0;
	        for (int i = 1; i < prices.length; i++) {
				if(prices[i]-min<=0)
					min=prices[i];
				else
				{
					if(maxP<prices[i]-min)
						maxP=prices[i]-min;
				}
			}
			return maxP;
    }
}
