/*
104. Maximum Depth of Binary Tree
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its depth = 3.

原题链接：https://leetcode.com/problems/maximum-depth-of-binary-tree/
*/

//解决思路：1.先排序再查找 2.用hashMap存储 3.性质a^a=1


//代码
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int maxDepth(TreeNode root) {
        int leftDepth=0;
        int rightDepth=0;
        if(root==null) return 0;
        else{
            leftDepth=1+maxDepth(root.left);
            rightDepth=1+maxDepth(root.right);
        }
        return leftDepth>rightDepth?leftDepth:rightDepth;
    }
}