/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    Map<Integer,Integer> inMap=new HashMap();
    int p=0;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder==null||preorder.length==0) return null;
        for(int i=0;i<inorder.length;i++){
            inMap.put(inorder[i],i);
        }
        return build(preorder,inorder,0,inorder.length-1);
    }
    private TreeNode build(int[] po,int[] io,int left,int right){
        if(right<left) return null;
        int idx=inMap.get(po[p]);
        TreeNode node=new TreeNode(io[idx]);
        p++;
        if(left==right){
            return node;
        }
        node.left=build(po,io,left,idx-1);
        node.right=build(po,io,idx+1,right);
        return node;
    }
}
